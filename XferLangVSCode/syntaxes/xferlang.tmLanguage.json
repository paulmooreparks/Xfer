{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "XferLang",
	"scopeName": "source.xferlang",
	"patterns": [
		{ "include": "#comments" },
		{ "include": "#processingInstructions" },
		{ "include": "#strings" },
		{ "include": "#interpolated" },
		{ "include": "#dynamic" },
		{ "include": "#numbers" },
		{ "include": "#booleans" },
		{ "include": "#null" },
		{ "include": "#reference" },
		{ "include": "#identifiers" },
		{ "include": "#delimiters" }
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.block.xferlang",
					"begin": "</+",
					"end": "/+>",
					"beginCaptures": { "0": { "name": "punctuation.definition.comment.begin.xferlang" } },
					"endCaptures": { "0": { "name": "punctuation.definition.comment.end.xferlang" } },
					"patterns": [ { "include": "#comments" } ]
				}
			]
		},
		"processingInstructions": {
			"patterns": [
				{
					"name": "meta.processing-instruction.xferlang",
					"begin": "<!",
					"end": "!>",
					"beginCaptures": { "0": { "name": "punctuation.definition.pi.begin.xferlang" } },
					"endCaptures": { "0": { "name": "punctuation.definition.pi.end.xferlang" } },
					"patterns": [
						{ "include": "#strings" },
		                { "include": "#interpolated" },
						{ "include": "#dynamic" },
						{ "include": "#numbers" },
						{ "include": "#booleans" },
						{ "include": "#null" },
                        { "include": "#reference" },
                        { "include": "#identifiers" },
                        { "include": "#delimiters" }
					]
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.triple.double.explicit.xferlang",
					"begin": "<\"{3,}",
					"end": "\"{3,}>",
					"patterns": []
				},
				{
					"name": "string.quoted.triple.double.xferlang",
					"begin": "\"{3,}",
					"end": "\"{3,}",
					"patterns": []
				},
				{
					"name": "string.quoted.double.explicit.xferlang",
					"begin": "<\"+",
					"end": "\"+>",
					"patterns": []
				},
				{
					"name": "string.quoted.double.xferlang",
					"begin": "\"+",
					"end": "\"+",
					"patterns": []
				}
			]
		},
		"interpolated": {
			"patterns": [
				{
					"name": "string.interpolated.explicit.xferlang",
					"begin": "<('+)",
					"end": "\\1>",
					"beginCaptures": { "0": { "name": "punctuation.definition.interpolated.begin.xferlang" } },
					"endCaptures": { "0": { "name": "punctuation.definition.interpolated.end.xferlang" } },
					"patterns": [
						{
							"name": "meta.interpolation.element.xferlang",
							"begin": "<",
							"end": ">",
							"patterns": [
								{ "include": "#strings" },
								{ "include": "#dynamic" },
								{ "include": "#numbers" },
								{ "include": "#booleans" },
								{ "include": "#null" },
								{ "include": "#reference" },
								{ "include": "#identifiers" }
							]
						}
					]
				},
				{
					"name": "string.interpolated.xferlang",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "meta.interpolation.element.xferlang",
							"begin": "<",
							"end": ">",
							"patterns": [
								{ "include": "#strings" },
								{ "include": "#dynamic" },
								{ "include": "#numbers" },
								{ "include": "#booleans" },
								{ "include": "#null" },
								{ "include": "#reference" },
								{ "include": "#identifiers" }
							]
						}
					]
				}
			]
		},
		"dynamic": {
			"patterns": [
						{
							"name": "variable.other.dynamic.explicit.xferlang",
							"begin": "<\\|+",
							"end": "\\|+>",
							"patterns": []
						},
						{
							"name": "variable.other.dynamic.xferlang",
							"match": "\\|{1,}[A-Za-z_][A-Za-z0-9_\\-]*\\|{1,}"
						}
			]
		},
		"numbers": {
			"patterns": [
				{ "name": "constant.numeric.integer.explicit.xferlang", "match": "<#+\\s*[+-]?\\d+\\s*#+>" },
				{ "name": "constant.numeric.integer.compact.xferlang", "match": "#+[+-]?\\d+#+" },
				{ "name": "constant.numeric.long.explicit.xferlang", "match": "<&+\\s*[+-]?\\d+\\s*&+>" },
				{ "name": "constant.numeric.long.compact.xferlang", "match": "&+[+-]?\\d+&+" },
				{ "name": "constant.numeric.decimal.explicit.xferlang", "match": "<\\*+\\s*[+-]?\\d+(?:\\.\\d+)?\\s*\\*+>" },
				{ "name": "constant.numeric.decimal.compact.xferlang", "match": "\\*+[+-]?\\d+(?:\\.\\d+)?\\*+" },
				{ "name": "constant.numeric.double.explicit.xferlang", "match": "<\\^+\\s*[+-]?\\d+(?:\\.\\d+)?\\s*\\^+>" },
				{ "name": "constant.numeric.double.compact.xferlang", "match": "\\^+[+-]?\\d+(?:\\.\\d+)?\\^+" },
				{ "name": "constant.numeric.hex.prefixed.xferlang", "match": "[#&]?\\$[0-9A-Fa-f]+" },
				{ "name": "constant.numeric.binary.prefixed.xferlang", "match": "[#&]?%[01]+" },
				{ "name": "constant.numeric.decimal.implicit.xferlang", "match": "(?<![#&\\^\\*])(?<![A-Za-z0-9_])[+-]?\\d+\\.\\d+" },
				{ "name": "constant.numeric.integer.implicit.xferlang", "match": "(?<![#&\\^\\*])(?<![A-Za-z0-9_])[+-]?\\d+\b" }
			]
		},
		"booleans": {
			"patterns": [
				{ "name": "constant.language.boolean.xferlang", "match": "<~(true|false)~>|~(true|false)" }
			]
		},
		"null": {
			"patterns": [
						{ "name": "constant.language.null.xferlang", "match": "<\\?\\?>|\\?" }
			]
		},
		"reference": {
			"patterns": [
						{ "name": "variable.other.reference.xferlang", "match": "_<[A-Za-z0-9_]+|_{1,}[A-Za-z0-9_]+" }
			]
		},
		"identifiers": {
			"patterns": [
						{ "name": "entity.name.key.xferlang", "match": "=+[A-Za-z0-9_\\-]+=+" },
				{ "name": "variable.other.identifier.xferlang", "match": "[A-Za-z_][A-Za-z0-9_]*" }
			]
		},
		"delimiters": {
			"patterns": [
						{ "name": "punctuation.section.braces.xferlang", "match": "[{}]" },
						{ "name": "punctuation.section.brackets.xferlang", "match": "[\\[\\]]" },
						{ "name": "punctuation.section.parens.xferlang", "match": "[()]" }
			]
		}
	}
}
