</ This file is written in XferLang. You may learn more about the syntax at this link:
https://github.com/paulmooreparks/Xfer/blob/master/ParksComputing.Xfer.Lang/README.md />

{
    </ ActiveWorkspace "httpbin" />

    InitScript <'file:globalInitScript.js'>

    </ This is a global pre-request script that will be executed before each request. />
    PreRequest <'
    '>

    </ This is a global post-request script that will be executed after each request completes. />
    PostRequest <'
        log(request.response.body);
    '>

    </ A workspace is a collection of related requests and associated configuration. />
    Workspaces {

        httpbin {
            BaseUrl "https://httpbin.org/"

            </ These are requests that may be executed by name from the command line. />
            Requests {
                cookies {
                    Endpoint "/cookies"
                    Method "GET"
                    Cookies {
                        session-id "1234567"
                        session-token "abcdef"
                    }
                }

                setcookies {
                    Endpoint "/cookies/set"
                    Method "GET"
                    Parameters (
                        'key1=value1'
                        'key2=value2'
                    )
                }

                gettest {
                    Endpoint "/get"
                    Method "GET"

                    </ Default headers to be sent with the request unless overridden. />
                    Headers {
                        Accept "application/json"
                    }
                    
                    </ Default parameters to be sent with the request unless overridden. />
                    Parameters (
                        'key1=value1'
                        'key2=value2'
                    )

                    PreRequest <'
                        log("This is the httpbin.gettest pre-request handler");
                        // Delegate to upstream pre-request handler
                        nextHandler();
                        '>

                    PostRequest <'
                        // Delegate to upstream post-request handler
                        nextHandler();
                    '>
                }
                posttest {
                    Endpoint "/post"
                    Method "POST"
                    Headers {
                        Content-Type "application/json"
                    }
                    Payload <'{ "key1": "value1", "key2": "value2"} '>
                }

                basic {
                    Endpoint '/basic-auth/<|httpBinBasicAuthUser|>/<|httpBinBasicAuthPassword|>'
                    Method "GET"
                    Headers {
                        </ The httpBinBearerToken environment variable is set in the .xf/.env file. />
                        Authorization 'Bearer <|httpBinBearerToken|>'
                    }

                    PreRequest <'
                        var basicAuth = btoa("<|httpBinBasicAuthUser|>:<|httpBinBasicAuthPassword|>");
                        request.headers["Authorization"] = "Basic " + basicAuth;
                        nextHandler();
                    '>
                }

                bearer {
                    Endpoint "/bearer"
                    Method "GET"
                    Headers {
                        </ The httpBinBearerToken environment variable is set in the .xf/.env file. />
                        Authorization 'Bearer <|httpBinBearerToken|>'
                    }
                }
            }
        }

        foo {
            Extend "httpbin"
            Requests {
                gettest {
                    Parameters (
                        'key3=value1'
                        'key4=value2'
                    )

                    PreRequest <'
                        log("This is the foo.gettest pre-request handler");
                        // Delegate to base pre-request handler
                        baseHandler();
                        '>
                }
            }
        }

        parkscomputing {
            BaseUrl "https://parkscomputing.com/"
            Requests {
                about {
                    Endpoint "/content/about.html"
                    Method "GET"
                }
            }
        }
    }
}