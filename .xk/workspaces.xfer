</ This file is written in XferLang. You may learn more about the syntax at this link:
https://github.com/paulmooreparks/Xfer/blob/master/ParksComputing.Xfer.Lang/README.md />

{
    assemblies [
    ]

    </ activeWorkspace "httpbin" />

    initScript <'file:globalInitScript.js'>

    scripts {
        sample {
            description "An example of a top-level named script."

            arguments {
                arg1 string "The first argument."
                arg2 number "The second argument."
                arg3 boolean "The third argument."
            }

            script <'
                log("Global script is executed.");
                log("arg1: " + arg1);
                log("arg2: " + arg2);
                log("arg3: " + arg3);
                return arg2 + 123;
            '>
        }

        echo {
            description "Another way to do output."

            arguments {
                obj object "The object to echo."
            }

            script <'
                log(obj.toString())
            '>
        }
    }

    </ This is a global pre-request script that will be executed before each request. />
    preRequest <'
    '>

    </ This is a global post-request script that will be executed after each request completes. />
    postResponse <'
        log(request.response.body);
    '>

    </ These are global variables that may be referenced in the configuration. />
    properties {
        sampleValue "This is a sample value"
    }

    macros {
    }

    </ A workspace is a collection of related requests and associated configuration. />
    workspaces {

        httpbin {
            description "Calling various endpoints in the httpbin.org service."

            macros {
            }

            baseUrl "https://httpbin.org/"

            </ These are requests that may be executed by name from the command line. />
            requests {
                cookies {
                    endpoint "/cookies"
                    method "GET"
                    cookies {
                        session-id "1234567"
                        session-token "abcdef"
                    }
                }

                setcookies {
                    endpoint "/cookies/set"
                    method "GET"
                    parameters (
                        'key1=value1'
                        'key2=value2'
                    )
                }

                gettest {
                    endpoint "/get"
                    method "GET"

                    </ Default headers to be sent with the request unless overridden. />
                    headers {
                        Accept "application/json"
                    }
                    
                    </ Default parameters to be sent with the request unless overridden. />
                    parameters (
                        'key1=value1'
                        'key2=value2'
                    )

                    preRequest <'
                        // Delegate to upstream pre-request handler
                        nextHandler();
                        '>

                    postResponse <'
                        // Delegate to upstream post-request handler
                        nextHandler();
                    '>
                }
                posttest {
                    endpoint "/post"
                    method "POST"
                    headers {
                        Content-Type "application/json"
                    }
                    payload <'{ "key1": "value1", "key2": "value2"} '>
                }

                basic {
                    endpoint '/basic-auth/<|httpBinBasicAuthUser|>/<|httpBinBasicAuthPassword|>'
                    method "GET"
                    headers {
                        </ The httpBinBearerToken environment variable is set in the .xk/.env file. />
                        Authorization 'Bearer <|httpBinBearerToken|>'
                    }

                    preRequest <'
                        var basicAuth = btoa("<|httpBinBasicAuthUser|>:<|httpBinBasicAuthPassword|>");
                        request.headers["Authorization"] = "Basic " + basicAuth;
                        nextHandler();
                    '>
                }

                bearer {
                    endpoint "/bearer"
                    method "GET"
                    headers {
                        </ The httpBinBearerToken environment variable is set in the .xk/.env file. />
                        Authorization 'Bearer <|httpBinBearerToken|>'
                    }
                }
            }
        }

        foo {
            description "An example of extending an existing workspace, in this case the httpbin workspace."

            extend "httpbin"
            requests {
                gettest {
                    parameters (
                        'key3=value1'
                        'key4=value2'
                    )

                    preRequest <'
                        log("This is the foo.gettest pre-request handler");
                        // Delegate to base pre-request handler
                        baseHandler();
                        '>
                }
            }
        }

        parkscomputing {
            description "Making calls to the Parks Computing website."

            baseUrl "https://parkscomputing.com/"
            requests {
                about {
                    endpoint "/content/about.html"
                    method "GET"
                }
            }
        }
    }
}