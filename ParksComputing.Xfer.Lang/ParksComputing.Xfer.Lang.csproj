<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <Title>XferLang Data-Transfer Language</Title>
    <Company>Paul M. Parks</Company>
    <Description>XferLang is a data-interchange format designed to support data serialization, data transmission, and offline use cases such as configuration management. XferLang is designed with explicit typing, human readability, and safe data embedding at its core.</Description>
    <Copyright>Copyright Â© 2025 Paul M. Parks</Copyright>
    <PackageProjectUrl>https://xferlang.org/</PackageProjectUrl>
    <PackageIcon>XferLang-sm.png</PackageIcon>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <RepositoryUrl>https://github.com/paulmooreparks/Xfer</RepositoryUrl>
    <PackageTags>xfer;language;data transfer;data;json</PackageTags>
    <PackAsTool>False</PackAsTool>
    <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    <PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
    <Version>0.14.0-prerelease</Version>
    <IncludeSymbols>True</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <ItemGroup>
    <Folder Include="Models\" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\logo\XferLang-sm.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <None Update="LICENSE.txt">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Update="logo\XferLang.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <!-- Documentation generation targets - only run if XferDocBuilder exists -->
  <Target Name="GenerateDocs" BeforeTargets="Build" Condition="'$(SkipXferDocGeneration)' != 'true'">
    <PropertyGroup>
      <SolutionDir Condition="'$(SolutionDir)' == '' Or '$(SolutionDir)' == '*Undefined*'">$(MSBuildProjectDirectory)\..\</SolutionDir>
      <XferDocBuilderPath>$(SolutionDir)XferDocBuilder\XferDocBuilder.csproj</XferDocBuilderPath>
    </PropertyGroup>

    <!-- Check if XferDocBuilder exists before trying to run it -->
    <ItemGroup>
      <XferDocBuilderExists Include="$(XferDocBuilderPath)" Condition="Exists('$(XferDocBuilderPath)')" />
    </ItemGroup>

    <Message Text="Generating documentation..." Importance="high" Condition="'@(XferDocBuilderExists)' != ''" />
    <Message Text="Solution directory: $(SolutionDir)" Importance="high" Condition="'@(XferDocBuilderExists)' != ''" />
    <Message Text="Skipping documentation generation - XferDocBuilder not found at: $(XferDocBuilderPath)" Importance="normal" Condition="'@(XferDocBuilderExists)' == ''" />

    <!-- Generate main documentation if XferDocBuilder exists -->
    <Exec Command="dotnet run --project &quot;$(XferDocBuilderPath)&quot; md &quot;$(SolutionDir)README.md&quot; &quot;$(SolutionDir)docs\index.html&quot;"
          ContinueOnError="false"
          WorkingDirectory="$(SolutionDir)"
          Condition="'@(XferDocBuilderExists)' != ''" />
  </Target>

  <Target Name="GenerateApiDocs" AfterTargets="Build" Condition="'$(SkipXferDocGeneration)' != 'true'">
    <PropertyGroup>
      <SolutionDir Condition="'$(SolutionDir)' == '' Or '$(SolutionDir)' == '*Undefined*'">$(MSBuildProjectDirectory)\..\</SolutionDir>
      <XferDocBuilderPath>$(SolutionDir)XferDocBuilder\XferDocBuilder.csproj</XferDocBuilderPath>
    </PropertyGroup>

    <!-- Check if XferDocBuilder exists before trying to run it -->
    <ItemGroup>
      <XferDocBuilderExists Include="$(XferDocBuilderPath)" Condition="Exists('$(XferDocBuilderPath)')" />
    </ItemGroup>

    <Message Text="Generating API documentation..." Importance="high" Condition="'@(XferDocBuilderExists)' != ''" />
    <Message Text="Assembly path: $(TargetPath)" Importance="high" Condition="'@(XferDocBuilderExists)' != ''" />
    <Message Text="Skipping API documentation generation - XferDocBuilder not found at: $(XferDocBuilderPath)" Importance="normal" Condition="'@(XferDocBuilderExists)' == ''" />

    <Exec Command="dotnet run --project &quot;$(XferDocBuilderPath)&quot; api &quot;$(TargetPath)&quot; &quot;$(SolutionDir)docs\api.html&quot;"
          ContinueOnError="false"
          WorkingDirectory="$(SolutionDir)"
          Condition="'@(XferDocBuilderExists)' != ''" />
  </Target>

</Project>
