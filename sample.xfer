<! This is a sample Xfer document. !>
<@ <: version <"1.0.0"> :> @>

<"Hello, Xfer!">
<" Xfer > Json ">
<" Json < Xfer ">
<" I <\$2764\> Xfer ">

<! An example of embedding a string element and a comment inside an Xfer string. !>
<""
<"Xfer"> is an Xfer string element <!and this is an Xfer comment!>.
"">

<!! A comment <! inside another comment !> !!>

<"A string may contain character elements<\$20\>inside of it, which will be parsed.">
<_When character elements are inside a literal<\$20\>element, they are not parsed_>
<__A literal may contain <_another literal_> if its markers are repeated__>

<{
    <: string <"value"> :> <! String marker is " !>
    <: boolean <~true~> :> <! Boolean marker is ~ !>
    <: integer <#42#> :> <! Integer marker is # !>
    <: long <`5000000000`> :> <! Long marker is ` !>
    <: hexLongInteger <`$BAADF00D`> :> <! Hex numeric values are preceded by $ !>
    <: binaryInteger <# %10101010 #> :> <! Binary numeric values are preceded by % !>
    <: double <^3.1415926535^> :> <! Double marker is ^ !>
    <: decimal <*123.45*> :> <! Decimal marker is * !>
    <: date <&2019-01-01&> :> <! Date marker is & !>
    <: object <{ 
            <:key <"value">:> 
            <: boolean <~false~> :>
        }> 
    :>
}>

<_
/* Now it's possible to embed code with less worry */
namespace HelloWorldApp;

class Program {
    static void Main(string[] args) {
        Console.WriteLine("Hello, Xfer!");
    }
}
_>

<! parse ..\..\..\..\sample.xfer !>