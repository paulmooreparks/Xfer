  Determining projects to restore...
  All projects are up-to-date for restore.
  ParksComputing.Xfer.Lang -> C:\Users\paul\source\repos\xfer\ParksComputing.Xfer.Lang\bin\Debug\net8.0\ParksComputing.Xfer.Lang.dll
  ParksComputing.Xfer.Lang.Tests -> C:\Users\paul\source\repos\xfer\ParksComputing.Xfer.Lang.Tests\bin\Debug\net8.0\ParksComputing.Xfer.Lang.Tests.dll
Test run for C:\Users\paul\source\repos\xfer\ParksComputing.Xfer.Lang.Tests\bin\Debug\net8.0\ParksComputing.Xfer.Lang.Tests.dll (.NETCoreApp,Version=v8.0)
VSTest version 17.14.0 (x64)

Starting test execution, please wait...
A total of 1 test files matched the specified pattern.
  Failed LongElement_ExplicitStyle_ShouldUseAngleBrackets [8 ms]
  Error Message:
   Assert.IsTrue failed. Expected explicit format to start with '<&', but got: '&42&'
  Stack Trace:
     at ParksComputing.Xfer.Lang.Tests.ExplicitElementFormatTests.LongElement_ExplicitStyle_ShouldUseAngleBrackets() in C:\Users\paul\source\repos\xfer\ParksComputing.Xfer.Lang.Tests\ExplicitElementFormatTests.cs:line 19
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)

  Failed DateElement_ExplicitStyle_ShouldUseAngleBrackets [< 1 ms]
  Error Message:
   Assert.IsTrue failed. Expected explicit format to start with '<@', but got: '@2023-01-15@'
  Stack Trace:
     at ParksComputing.Xfer.Lang.Tests.ExplicitElementFormatTests.DateElement_ExplicitStyle_ShouldUseAngleBrackets() in C:\Users\paul\source\repos\xfer\ParksComputing.Xfer.Lang.Tests\ExplicitElementFormatTests.cs:line 34
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)


Failed!  - Failed:     2, Passed:   481, Skipped:     0, Total:   483, Duration: 529 ms - ParksComputing.Xfer.Lang.Tests.dll (net8.0)

Workload updates are available. Run `dotnet workload list` for more information.
