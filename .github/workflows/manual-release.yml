name: .NET CI

on:
  workflow_dispatch:
    inputs:
      reset_build_number:
        description: 'Reset build number to 1?'
        required: false
        default: 'false'

  pull_request:
    branches: [ "master" ]
  push:
    branches: [ "master" ]

permissions:
  contents: write
  actions: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Read version from csproj
      id: read-version
      run: |
        base=$(grep -oPm1 "(?<=<Version>)[^<]+" ParksComputing.Xfer.Lang/ParksComputing.Xfer.Lang.csproj)
        build=${{github.run_number}}
        echo "version=$base.$build" >> $GITHUB_OUTPUT

    - name: Build
      run: dotnet build --no-restore -c Release ParksComputing.Xfer.Lang/ParksComputing.Xfer.Lang.csproj -p:Version=${ steps.read-version.outputs.version }

    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Pack with computed version
      run: dotnet pack ParksComputing.Xfer.Lang/ParksComputing.Xfer.Lang.csproj -c Release --no-build -o ./nupkgs -p:PackageVersion=${ steps.read-version.outputs.version } -p:Version=${ steps.read-version.outputs.version }

    - name: Tag release
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag "v${ steps.read-version.outputs.version }"
        git push origin "v${ steps.read-version.outputs.version }"
