name: Manual Release

on:
  workflow_dispatch:
    inputs:
      prerelease:
        description: 'Mark as pre-release'
        required: true
        default: 'true'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'

    - name: Read version from csproj
      id: read-version
      run: |
        base=$(grep -oPm1 "(?<=<Version>)[^<]+" ParksComputing.Xfer.Lang/ParksComputing.Xfer.Lang.csproj)
        base2=${base%.*}
        # use latest successful build run_number if possible
        runnum=$(gh api repos/${{ github.repository }}/actions/workflows/dotnet.yml/runs           --jq '.workflow_runs[] | select(.conclusion == "success") | .run_number' | head -1)
        build=${runnum:-${GITHUB_RUN_NUMBER}}
        full="$base2.$build"
        echo "version=$full" >> $GITHUB_OUTPUT
        echo "VERSION=$full" >> $GITHUB_ENV

    - name: Build
      run: dotnet build -c Release ParksComputing.Xfer.Lang/ParksComputing.Xfer.Lang.csproj -p:Version=$VERSION

    - name: Pack
      run: dotnet pack ParksComputing.Xfer.Lang/ParksComputing.Xfer.Lang.csproj -c Release --no-build -o ./nupkgs -p:PackageVersion=$VERSION -p:Version=$VERSION

    - name: Create Git tag if not exists
      run: |
        if ! git rev-parse "v$VERSION" >/dev/null 2>&1; then
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "v$VERSION"
          git push origin "v$VERSION"
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.read-version.outputs.version }}
        prerelease: ${{ github.event.inputs.prerelease }}
        generate_release_notes: true

    - name: Publish to NuGet
      run: dotnet nuget push ./nupkgs/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
