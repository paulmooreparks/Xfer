name: .NET CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write
  actions: read

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore Xfer.sln
    - name: Build
      run: dotnet build --no-restore --configuration Release Xfer.sln
    - name: Test
      run: dotnet test --no-build --configuration Release Xfer.sln

  # Keep automatic versioning for CI validation (no publishing)
  package-validation:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Read base version
      id: version
      run: |
        BASE_VERSION=$(cat version.txt)
        FULL_VERSION="${BASE_VERSION}.${{ github.run_number }}-prerelease"
        echo "base=$BASE_VERSION" >> $GITHUB_OUTPUT
        echo "full=$FULL_VERSION" >> $GITHUB_OUTPUT
        echo "ðŸ“¦ Building version: $FULL_VERSION"
    - name: Build
      run: dotnet build ./ParksComputing.Xfer.Lang/ParksComputing.Xfer.Lang.csproj -c Release -p:Version=${{ steps.version.outputs.full }}
    - name: Pack with auto-increment version (CI validation only)
      run: dotnet pack ./ParksComputing.Xfer.Lang/ParksComputing.Xfer.Lang.csproj -c Release -p:Version=${{ steps.version.outputs.full }} -o ./nupkgs --no-build
    - name: List generated packages (not published)
      run: ls -la ./nupkgs/

