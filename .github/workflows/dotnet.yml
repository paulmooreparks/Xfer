name: .NET CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      reset_build_number:
        description: "Reset the build number (true/false)"
        required: false
        default: "false"

permissions:
  contents: write
  actions: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Read version from csproj
      id: read-version
      env:
        RESET_BUILD: ${{ github.event.inputs.reset_build_number }}
      run: |
        base=$(grep -oPm1 "(?<=<Version>)[^<]+" xk/xk.csproj)
        if [[ "$RESET_BUILD" == "true" ]]; then
          echo "Resetting build number to 1"
          build=1
        else
          build=${GITHUB_RUN_NUMBER}
        fi
        full="$base.$build"
        echo "VERSION=$full" >> $GITHUB_ENV
        echo "version=$full" >> $GITHUB_OUTPUT

    - name: Build
      run: dotnet build --no-restore -c Release ParksComputing.Xfer.Lang/ParksComputing.Xfer.Lang.csproj -p:Version=${ steps.read-version.outputs.version }

    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Pack with computed version
      run: dotnet pack ParksComputing.Xfer.Lang/ParksComputing.Xfer.Lang.csproj -c Release --no-build -o ./nupkgs -p:PackageVersion=${ steps.read-version.outputs.version } -p:Version=${ steps.read-version.outputs.version }

    - name: Tag release
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag "v${ steps.read-version.outputs.version }"
        git push origin "v${ steps.read-version.outputs.version }"